

 1) The TFTP protocol does not have messaging between users. but connections<T> is a modification for the server, not part of the protocol.

 In theory, lets say we want to create a protocol for a chat server. Then in our implementation of MessagingProtocol, if we know the connection id of another client we can call: connections.send(otherConnid, messageToSend);

 2) This is NOT a mistake.
 As stated Connections<T> does not know the protocol and care about it... It's part of the new server design now.
 It has a broadcast function cause it has one... If any protocol that you wish to implement needs it...
 In our case, TFTP never sends broadcasts to all the active clients, only to those who logged in (Logging in is part of our altered TFTP protocol, you can figure it out since its part of the protocol specifications).
 To implement BCAST you need to figure out how the MessagingProtocol knows the connection id's of all logged in users.




http://stackoverflow.com/questions/21112562/reading-and-writing-a-file-in-byte-array-in-c-c
FILE *fileptr;
char *buffer;
long filelen;

fileptr = fopen("myfile.txt", "rb");  // Open the file in binary mode
fseek(fileptr, 0, SEEK_END);          // Jump to the end of the file
filelen = ftell(fileptr);             // Get the current byte offset in the file
rewind(fileptr);                      // Jump back to the beginning of the file

buffer = (char *)malloc((filelen+1)*sizeof(char)); // Enough memory for file + \0
fread(buffer, filelen, 1, fileptr); // Read in the entire file
fclose(fileptr); // Close the file